---
# upgrade.yml

- name: upgrade - register timestamp
  shell: 'date "+%s"'
  register: timestamp

- name: upgrade - turn on maintenance mode for nextcloud
  command: 'php {{ nextcloud_web_root }}/occ maintenance:mode --on'
  become: true
  become_user: nginx

- name: upgrade - stopp web services
  service:
    name: '{{ item }}'
    state: stopped
  with_items:
    - nginx
    - php-fpm

- name: ensure the backup directory exists
  file:
    path: '{{ nextcloud_backup_dir }}'
    state: directory

- name: create database backup to {{ nextcloud_backup_dir }}/nextcloud-{{ timestamp.stdout }}.sql
  mysql_db:
    name: '{{ nextcloud_mysql_db }}'
    state: dump
    target: '{{ nextcloud_backup_dir }}/nextcloud-{{ timestamp.stdout }}.sql'

- name: upgrade - copy current installation to {{ nextcloud_backup_dir }}/nextcloud-{{ timestamp.stdout }}
  command: 'cp -r {{ nextcloud_web_root }} {{ nextcloud_backup_dir }}/nextcloud-{{ timestamp.stdout }}'

- name: upgrade - copy data to {{ nextcloud_backup_dir }}/nextcloud-data-{{ timestamp.stdout }}
  command: 'cp -r {{ nextcloud_data_root }} {{ nextcloud_backup_dir }}/nextcloud-data-{{ timestamp.stdout }}'
  when: nextcloud_backup_data

- name: upgrade - remove current installation
  file:
    name: '{{ nextcloud_web_root }}'
    state: absent
    
- name: upgrade - create new webroot
  file:
    name: '{{ nextcloud_web_root }}'
    state: directory

- name: upgarde - ensure new version is unarchived in {{ nextcloud_web_root }}
  unarchive:
    src: '{{ nextcloud_repo_url  }}/nextcloud-{{ nextcloud_version }}.tar.bz2'
    remote_src: true
    dest: '{{ nextcloud_web_root }}/..'

- name: upgrade - restore config file
  command: 'cp -f {{ nextcloud_backup_dir }}/nextcloud-{{ timestamp.stdout }}/config/config.php {{ nextcloud_web_root }}/config/config.php'

- name: upgrade - restore themes folder 
  command: 'cp -rf {{ nextcloud_backup_dir }}/nextcloud-{{ timestamp.stdout }}/themes {{ nextcloud_web_root }}/themes'

#- name: upgrade - ensure nextcloud directory permissions are set
#  command: '{{ nextcloud_working_dir }}/nextcloud_permissions.sh'

# configure directories permissions
- include: 'permissions.yml'

- name: upgrade - start web services
  service:
    name: '{{ item }}'
    state: started
  with_items:
    - nginx
    - php-fpm

- name: upgrade - run occ upgrade
  command: 'php {{ nextcloud_web_root }}/occ upgrade'
  become: true
  become_user: nginx

- name: upgrade - turn off maintenance mode for nextcloud
  command: 'php {{ nextcloud_web_root }}/occ maintenance:mode --off'
  become: true
  become_user: nginx

