---
# prerequisites.yml

- name: ensure required packages are installed
  yum:
    name: 
      - policycoreutils-python
      - lbzip2-utils
  #    - nginx
      - openssl
  #    - mariadb-server
      - MySQL-python
      - redis
  #    - php71w-fpm
  #    - php71w-opcache
  #    - php71w-common # ctype, iconv, json, libxml, simplexml, zip, zlib, curl, fileinfo, bz2, openssl, ftp, exif, gmp
  #    - php71w-xml
  #    - php71w-gd 
  #    - php71w-xml # dom, xmlreader, xmlwriter
  #    - php71w-mbstring 
  #    - php71w-intl # intl
  #    - php71w-mcrypt
  #    - php71w-mysql
  #    - php71w-ldap
  #    - php71w-imap
  #    - php71w-pecl-apcu 
  #    - php71w-pecl-redis
  #    - php71w-pecl-imagick
  #    - php71w-process # posix
      - libreoffice


# nginx php
- include: 'nginx-php.yml'
  when: nextcloud_install_nginx_php

# mariadb
- include: 'mariadb.yml'
  when: nextcloud_install_mariadb

- name: ensure redis.conf is present
  copy:
    src: redis.conf
    dest: /etc/redis.conf
  notify:
    - restart redis

- name: ensure nextcloud.conf nginx config is present
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/nextcloud.conf
  notify: 
    - reload nginx

- name: ensure ssl key and cert are present
  command: 'openssl req -new -nodes -x509 -subj {{ nextcloud_ssl_subject }} -days 3650 -keyout {{ nextcloud_ssl_key }} -out {{nextcloud_ssl_cert }} -extensions v3_ca creates={{ nextcloud_ssl_cert }}'
  notify: 
    - reload nginx
  when: nextcloud_use_https and nextcloud_generate_cert

- name: copy ssl cert
  copy: 
    src: '{{ nextcloud_ssl_cert_file }}'
    dest: '{{ nextcloud_ssl_cert }}'
    owner: nginx
    group: nginx
  notify: 
    - reload nginx
  when: not nextcloud_generate_cert and not nextcloud_letsencrypt_cert

- name: copy ssl key
  copy: 
    src: '{{ nextcloud_ssl_key_file }}'
    dest: '{{ nextcloud_ssl_key }}'
    owner: nginx
    group: nginx
  notify: 
    - reload nginx
  when: not nextcloud_generate_cert and not nextcloud_letsencrypt_cert

- name: ensure php-fpm www.conf is present
  copy:
    src: www.conf
    dest: /etc/php-fpm.d/www.conf
  notify: reload php-fpm

- name: ensure nginx, php-fpm and redis are enabled and running
  service:
    name: '{{ item }}'
    state: started
    enabled: yes
  with_items:
    - php-fpm
    - nginx
    - redis

- name: ensure opcache settings are correct
  lineinfile:
    path: '/etc/php.d/{{ nextcloud_opcache_file }}'
    regexp: '^{{ item.name }}='
    line: '{{ item.name }}={{ item.value }}'
  with_items:
    - { name: opcache.enable, value: 1 }
    - { name: opcache.enable_cli, value: 1 }
    - { name: opcache.interned_strings_buffer, value: 8 }
    - { name: opcache.max_accelerated_files, value: 10000 }
    - { name: opcache.memory_consumption, value: 128 }
    - { name: opcache.save_comments, value: 1 }
    - { name: opcache.revalidate_freq, value: 1 }
  notify: restart php-fpm

- name: ensure working dir is present
  file:
    path: '{{ nextcloud_working_dir }}'
    state: directory

- name: ensure alias for the occ command exists in /root/.bashrc
  lineinfile:
    name: /root/.bashrc
    line: "alias occ='sudo -u nginx {{ nextcloud_web_root }}/occ'"
